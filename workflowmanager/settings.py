"""
Django settings for workflowmanager project.

Generated by 'django-admin startproject' using Django 3.1.8.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
from celery.schedules import crontab

from utils.helpers import env_var

BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '7mf@a(78+1epugt3g-n&9iaxt&8n#*_t0=5xu4n+#iti0(ukf9'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # 'middlewares',
    'utils',
    'userman',
    'workflowops',
    'workflowapi'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'middlewares.api_authentication.ApiAuthenticationMiddleware'
]

ROOT_URLCONF = 'workflowmanager.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'workflowmanager.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': str(BASE_DIR / 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'

# celery settings
CELERY_BROKER_URL = env_var('CELERY_BROKER_URL', str, default='redis://127.0.0.1:6379/3')
CELERY_BROKER_TRANSPORT_OPTIONS = {'visibility_timeout': 18000}  # 5 hours
CELERY_RESULT_BACKEND = env_var('CELERY_RESULT_BACKEND_URL', str, default='redis://127.0.0.1:6379/4')

CELERY_TASK_SERIALIZER = "json"
CELERY_RESULT_SERIALIZER = "json"
CELERY_ACCEPT_CONTENT = ["json"]

CELERY_TASK_TRACK_STARTED = True

CELERY_TASK_IGNORE_RESULT = True
CELERY_TASK_STORE_ERRORS_EVEN_IF_IGNORED = True
CELERY_WORKER_MAX_TASKS_PER_CHILD = 500  # Restart a worker process after executing 500 tasks
CELERY_TASK_SEND_SENT_EVENT = True

CELERY_SEND_TASK_ERROR_EMAILS = env_var('CELERY_SEND_TASK_ERROR_EMAILS', bool, default=True)  # not present in 4.2.0

CELERY_WORKER_PREFETCH_MULTIPLIER = 1  # Reduce prefetching, not sure how to disable it.

# Queues & Routing

CELERY_TASK_CREATE_MISSING_QUEUES = False
CELERY_TASK_DEFAULT_QUEUE = 'celery'

# Time limits in seconds.
CELERY_TASK_TIME_LIMIT = env_var('CELERYD_TASK_TIME_LIMIT', int, default=180)
CELERY_TASK_SOFT_TIME_LIMIT = env_var('CELERYD_TASK_SOFT_TIME_LIMIT', int, default=120)


CELERY_BEAT_SCHEDULE = {
    'periodic-tasks': {
        'task': 'workflowops.tasks.PeriodicTask',
        'schedule': crontab(minute='*/1'),
    },
}
